{"ast":null,"code":"const RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\nconst RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\nconst hex2rgb = hex => {\n  if (hex.match(RE_HEX)) {\n    // remove optional leading #\n    if (hex.length === 4 || hex.length === 7) {\n      hex = hex.substr(1);\n    }\n    // expand short-notation to full six-digit\n    if (hex.length === 3) {\n      hex = hex.split('');\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    const u = parseInt(hex, 16);\n    const r = u >> 16;\n    const g = u >> 8 & 0xff;\n    const b = u & 0xff;\n    return [r, g, b, 1];\n  }\n\n  // match rgba hex format, eg #FF000077\n  if (hex.match(RE_HEXA)) {\n    if (hex.length === 5 || hex.length === 9) {\n      // remove optional leading #\n      hex = hex.substr(1);\n    }\n    // expand short-notation to full eight-digit\n    if (hex.length === 4) {\n      hex = hex.split('');\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n    }\n    const u = parseInt(hex, 16);\n    const r = u >> 24 & 0xff;\n    const g = u >> 16 & 0xff;\n    const b = u >> 8 & 0xff;\n    const a = Math.round((u & 0xff) / 0xff * 100) / 100;\n    return [r, g, b, a];\n  }\n\n  // we used to check for css colors here\n  // if _input.css? and rgb = _input.css hex\n  //     return rgb\n\n  throw new Error(`unknown hex color: ${hex}`);\n};\nexport default hex2rgb;","map":{"version":3,"names":["RE_HEX","RE_HEXA","hex2rgb","hex","match","length","substr","split","u","parseInt","r","g","b","a","Math","round","Error"],"sources":["/Users/alyssayee/Library/Mobile Documents/com~apple~CloudDocs/School/College/UCD/Classes/ECS 273/github/FitBot/fitbot/node_modules/chroma-js/src/io/hex/hex2rgb.js"],"sourcesContent":["const RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\nconst RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\nconst hex2rgb = (hex) => {\n    if (hex.match(RE_HEX)) {\n        // remove optional leading #\n        if (hex.length === 4 || hex.length === 7) {\n            hex = hex.substr(1);\n        }\n        // expand short-notation to full six-digit\n        if (hex.length === 3) {\n            hex = hex.split('');\n            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n        }\n        const u = parseInt(hex, 16);\n        const r = u >> 16;\n        const g = (u >> 8) & 0xff;\n        const b = u & 0xff;\n        return [r, g, b, 1];\n    }\n\n    // match rgba hex format, eg #FF000077\n    if (hex.match(RE_HEXA)) {\n        if (hex.length === 5 || hex.length === 9) {\n            // remove optional leading #\n            hex = hex.substr(1);\n        }\n        // expand short-notation to full eight-digit\n        if (hex.length === 4) {\n            hex = hex.split('');\n            hex =\n                hex[0] +\n                hex[0] +\n                hex[1] +\n                hex[1] +\n                hex[2] +\n                hex[2] +\n                hex[3] +\n                hex[3];\n        }\n        const u = parseInt(hex, 16);\n        const r = (u >> 24) & 0xff;\n        const g = (u >> 16) & 0xff;\n        const b = (u >> 8) & 0xff;\n        const a = Math.round(((u & 0xff) / 0xff) * 100) / 100;\n        return [r, g, b, a];\n    }\n\n    // we used to check for css colors here\n    // if _input.css? and rgb = _input.css hex\n    //     return rgb\n\n    throw new Error(`unknown hex color: ${hex}`);\n};\n\nexport default hex2rgb;\n"],"mappings":"AAAA,MAAMA,MAAM,GAAG,qCAAqC;AACpD,MAAMC,OAAO,GAAG,qCAAqC;AAErD,MAAMC,OAAO,GAAIC,GAAG,IAAK;EACrB,IAAIA,GAAG,CAACC,KAAK,CAACJ,MAAM,CAAC,EAAE;IACnB;IACA,IAAIG,GAAG,CAACE,MAAM,KAAK,CAAC,IAAIF,GAAG,CAACE,MAAM,KAAK,CAAC,EAAE;MACtCF,GAAG,GAAGA,GAAG,CAACG,MAAM,CAAC,CAAC,CAAC;IACvB;IACA;IACA,IAAIH,GAAG,CAACE,MAAM,KAAK,CAAC,EAAE;MAClBF,GAAG,GAAGA,GAAG,CAACI,KAAK,CAAC,EAAE,CAAC;MACnBJ,GAAG,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC;IAC7D;IACA,MAAMK,CAAC,GAAGC,QAAQ,CAACN,GAAG,EAAE,EAAE,CAAC;IAC3B,MAAMO,CAAC,GAAGF,CAAC,IAAI,EAAE;IACjB,MAAMG,CAAC,GAAIH,CAAC,IAAI,CAAC,GAAI,IAAI;IACzB,MAAMI,CAAC,GAAGJ,CAAC,GAAG,IAAI;IAClB,OAAO,CAACE,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE,CAAC,CAAC;EACvB;;EAEA;EACA,IAAIT,GAAG,CAACC,KAAK,CAACH,OAAO,CAAC,EAAE;IACpB,IAAIE,GAAG,CAACE,MAAM,KAAK,CAAC,IAAIF,GAAG,CAACE,MAAM,KAAK,CAAC,EAAE;MACtC;MACAF,GAAG,GAAGA,GAAG,CAACG,MAAM,CAAC,CAAC,CAAC;IACvB;IACA;IACA,IAAIH,GAAG,CAACE,MAAM,KAAK,CAAC,EAAE;MAClBF,GAAG,GAAGA,GAAG,CAACI,KAAK,CAAC,EAAE,CAAC;MACnBJ,GAAG,GACCA,GAAG,CAAC,CAAC,CAAC,GACNA,GAAG,CAAC,CAAC,CAAC,GACNA,GAAG,CAAC,CAAC,CAAC,GACNA,GAAG,CAAC,CAAC,CAAC,GACNA,GAAG,CAAC,CAAC,CAAC,GACNA,GAAG,CAAC,CAAC,CAAC,GACNA,GAAG,CAAC,CAAC,CAAC,GACNA,GAAG,CAAC,CAAC,CAAC;IACd;IACA,MAAMK,CAAC,GAAGC,QAAQ,CAACN,GAAG,EAAE,EAAE,CAAC;IAC3B,MAAMO,CAAC,GAAIF,CAAC,IAAI,EAAE,GAAI,IAAI;IAC1B,MAAMG,CAAC,GAAIH,CAAC,IAAI,EAAE,GAAI,IAAI;IAC1B,MAAMI,CAAC,GAAIJ,CAAC,IAAI,CAAC,GAAI,IAAI;IACzB,MAAMK,CAAC,GAAGC,IAAI,CAACC,KAAK,CAAE,CAACP,CAAC,GAAG,IAAI,IAAI,IAAI,GAAI,GAAG,CAAC,GAAG,GAAG;IACrD,OAAO,CAACE,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;EACvB;;EAEA;EACA;EACA;;EAEA,MAAM,IAAIG,KAAK,CAAC,sBAAsBb,GAAG,EAAE,CAAC;AAChD,CAAC;AAED,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}