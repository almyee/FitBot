{"ast":null,"code":"/*\n * Based on implementation by Neil Bartlett\n * https://github.com/neilbartlett/color-temperature\n */\n\nconst {\n  log\n} = Math;\nconst temperature2rgb = kelvin => {\n  const temp = kelvin / 100;\n  let r, g, b;\n  if (temp < 66) {\n    r = 255;\n    g = temp < 6 ? 0 : -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n    b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n  } else {\n    r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n    g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n    b = 255;\n  }\n  return [r, g, b, 1];\n};\nexport default temperature2rgb;","map":{"version":3,"names":["log","Math","temperature2rgb","kelvin","temp","r","g","b"],"sources":["/Users/alyssayee/Library/Mobile Documents/com~apple~CloudDocs/School/College/UCD/Classes/ECS 273/github/FitBot/fitbot/node_modules/chroma-js/src/io/temp/temperature2rgb.js"],"sourcesContent":["/*\n * Based on implementation by Neil Bartlett\n * https://github.com/neilbartlett/color-temperature\n */\n\nconst { log } = Math;\n\nconst temperature2rgb = (kelvin) => {\n    const temp = kelvin / 100;\n    let r, g, b;\n    if (temp < 66) {\n        r = 255;\n        g =\n            temp < 6\n                ? 0\n                : -155.25485562709179 -\n                  0.44596950469579133 * (g = temp - 2) +\n                  104.49216199393888 * log(g);\n        b =\n            temp < 20\n                ? 0\n                : -254.76935184120902 +\n                  0.8274096064007395 * (b = temp - 10) +\n                  115.67994401066147 * log(b);\n    } else {\n        r =\n            351.97690566805693 +\n            0.114206453784165 * (r = temp - 55) -\n            40.25366309332127 * log(r);\n        g =\n            325.4494125711974 +\n            0.07943456536662342 * (g = temp - 50) -\n            28.0852963507957 * log(g);\n        b = 255;\n    }\n    return [r, g, b, 1];\n};\n\nexport default temperature2rgb;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,MAAM;EAAEA;AAAI,CAAC,GAAGC,IAAI;AAEpB,MAAMC,eAAe,GAAIC,MAAM,IAAK;EAChC,MAAMC,IAAI,GAAGD,MAAM,GAAG,GAAG;EACzB,IAAIE,CAAC,EAAEC,CAAC,EAAEC,CAAC;EACX,IAAIH,IAAI,GAAG,EAAE,EAAE;IACXC,CAAC,GAAG,GAAG;IACPC,CAAC,GACGF,IAAI,GAAG,CAAC,GACF,CAAC,GACD,CAAC,kBAAkB,GACnB,mBAAmB,IAAIE,CAAC,GAAGF,IAAI,GAAG,CAAC,CAAC,GACpC,kBAAkB,GAAGJ,GAAG,CAACM,CAAC,CAAC;IACrCC,CAAC,GACGH,IAAI,GAAG,EAAE,GACH,CAAC,GACD,CAAC,kBAAkB,GACnB,kBAAkB,IAAIG,CAAC,GAAGH,IAAI,GAAG,EAAE,CAAC,GACpC,kBAAkB,GAAGJ,GAAG,CAACO,CAAC,CAAC;EACzC,CAAC,MAAM;IACHF,CAAC,GACG,kBAAkB,GAClB,iBAAiB,IAAIA,CAAC,GAAGD,IAAI,GAAG,EAAE,CAAC,GACnC,iBAAiB,GAAGJ,GAAG,CAACK,CAAC,CAAC;IAC9BC,CAAC,GACG,iBAAiB,GACjB,mBAAmB,IAAIA,CAAC,GAAGF,IAAI,GAAG,EAAE,CAAC,GACrC,gBAAgB,GAAGJ,GAAG,CAACM,CAAC,CAAC;IAC7BC,CAAC,GAAG,GAAG;EACX;EACA,OAAO,CAACF,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE,CAAC,CAAC;AACvB,CAAC;AAED,eAAeL,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}