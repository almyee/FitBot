{"ast":null,"code":"//\n// interpolates between a set of colors uzing a bezier spline\n//\n\n// @requires utils lab\nimport Color from '../Color.js';\nimport '../io/lab/index.js';\nimport scale from './scale.js';\n\n// nth row of the pascal triangle\nconst binom_row = function (n) {\n  let row = [1, 1];\n  for (let i = 1; i < n; i++) {\n    let newrow = [1];\n    for (let j = 1; j <= row.length; j++) {\n      newrow[j] = (row[j] || 0) + row[j - 1];\n    }\n    row = newrow;\n  }\n  return row;\n};\nconst bezier = function (colors) {\n  let I, lab0, lab1, lab2;\n  colors = colors.map(c => new Color(c));\n  if (colors.length === 2) {\n    // linear interpolation\n    [lab0, lab1] = colors.map(c => c.lab());\n    I = function (t) {\n      const lab = [0, 1, 2].map(i => lab0[i] + t * (lab1[i] - lab0[i]));\n      return new Color(lab, 'lab');\n    };\n  } else if (colors.length === 3) {\n    // quadratic bezier interpolation\n    [lab0, lab1, lab2] = colors.map(c => c.lab());\n    I = function (t) {\n      const lab = [0, 1, 2].map(i => (1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]);\n      return new Color(lab, 'lab');\n    };\n  } else if (colors.length === 4) {\n    // cubic bezier interpolation\n    let lab3;\n    [lab0, lab1, lab2, lab3] = colors.map(c => c.lab());\n    I = function (t) {\n      const lab = [0, 1, 2].map(i => (1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]);\n      return new Color(lab, 'lab');\n    };\n  } else if (colors.length >= 5) {\n    // general case (degree n bezier)\n    let labs, row, n;\n    labs = colors.map(c => c.lab());\n    n = colors.length - 1;\n    row = binom_row(n);\n    I = function (t) {\n      const u = 1 - t;\n      const lab = [0, 1, 2].map(i => labs.reduce((sum, el, j) => sum + row[j] * u ** (n - j) * t ** j * el[i], 0));\n      return new Color(lab, 'lab');\n    };\n  } else {\n    throw new RangeError('No point in running bezier with only one color.');\n  }\n  return I;\n};\nexport default colors => {\n  const f = bezier(colors);\n  f.scale = () => scale(f);\n  return f;\n};","map":{"version":3,"names":["Color","scale","binom_row","n","row","i","newrow","j","length","bezier","colors","I","lab0","lab1","lab2","map","c","lab","t","lab3","labs","u","reduce","sum","el","RangeError","f"],"sources":["/Users/alyssayee/Library/Mobile Documents/com~apple~CloudDocs/School/College/UCD/Classes/ECS 273/github/FitBot/fitbot/node_modules/chroma-js/src/generator/bezier.js"],"sourcesContent":["//\n// interpolates between a set of colors uzing a bezier spline\n//\n\n// @requires utils lab\nimport Color from '../Color.js';\nimport '../io/lab/index.js';\nimport scale from './scale.js';\n\n// nth row of the pascal triangle\nconst binom_row = function (n) {\n    let row = [1, 1];\n    for (let i = 1; i < n; i++) {\n        let newrow = [1];\n        for (let j = 1; j <= row.length; j++) {\n            newrow[j] = (row[j] || 0) + row[j - 1];\n        }\n        row = newrow;\n    }\n    return row;\n};\n\nconst bezier = function (colors) {\n    let I, lab0, lab1, lab2;\n    colors = colors.map((c) => new Color(c));\n    if (colors.length === 2) {\n        // linear interpolation\n        [lab0, lab1] = colors.map((c) => c.lab());\n        I = function (t) {\n            const lab = [0, 1, 2].map((i) => lab0[i] + t * (lab1[i] - lab0[i]));\n            return new Color(lab, 'lab');\n        };\n    } else if (colors.length === 3) {\n        // quadratic bezier interpolation\n        [lab0, lab1, lab2] = colors.map((c) => c.lab());\n        I = function (t) {\n            const lab = [0, 1, 2].map(\n                (i) =>\n                    (1 - t) * (1 - t) * lab0[i] +\n                    2 * (1 - t) * t * lab1[i] +\n                    t * t * lab2[i]\n            );\n            return new Color(lab, 'lab');\n        };\n    } else if (colors.length === 4) {\n        // cubic bezier interpolation\n        let lab3;\n        [lab0, lab1, lab2, lab3] = colors.map((c) => c.lab());\n        I = function (t) {\n            const lab = [0, 1, 2].map(\n                (i) =>\n                    (1 - t) * (1 - t) * (1 - t) * lab0[i] +\n                    3 * (1 - t) * (1 - t) * t * lab1[i] +\n                    3 * (1 - t) * t * t * lab2[i] +\n                    t * t * t * lab3[i]\n            );\n            return new Color(lab, 'lab');\n        };\n    } else if (colors.length >= 5) {\n        // general case (degree n bezier)\n        let labs, row, n;\n        labs = colors.map((c) => c.lab());\n        n = colors.length - 1;\n        row = binom_row(n);\n        I = function (t) {\n            const u = 1 - t;\n            const lab = [0, 1, 2].map((i) =>\n                labs.reduce(\n                    (sum, el, j) =>\n                        sum + row[j] * u ** (n - j) * t ** j * el[i],\n                    0\n                )\n            );\n            return new Color(lab, 'lab');\n        };\n    } else {\n        throw new RangeError('No point in running bezier with only one color.');\n    }\n    return I;\n};\n\nexport default (colors) => {\n    const f = bezier(colors);\n    f.scale = () => scale(f);\n    return f;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}