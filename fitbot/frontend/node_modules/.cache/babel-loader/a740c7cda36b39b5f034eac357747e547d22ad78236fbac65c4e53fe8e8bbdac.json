{"ast":null,"code":"import LAB_CONSTANTS from './lab-constants.js';\nimport { unpack } from '../../utils/index.js';\nconst rgb2lab = (...args) => {\n  const [r, g, b, ...rest] = unpack(args, 'rgb');\n  const [x, y, z] = rgb2xyz(r, g, b);\n  const [L, a, b_] = xyz2lab(x, y, z);\n  return [L, a, b_, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\nfunction xyz2lab(x, y, z) {\n  const {\n    Xn,\n    Yn,\n    Zn,\n    kE,\n    kK\n  } = LAB_CONSTANTS;\n  const xr = x / Xn;\n  const yr = y / Yn;\n  const zr = z / Zn;\n  const fx = xr > kE ? Math.pow(xr, 1.0 / 3.0) : (kK * xr + 16.0) / 116.0;\n  const fy = yr > kE ? Math.pow(yr, 1.0 / 3.0) : (kK * yr + 16.0) / 116.0;\n  const fz = zr > kE ? Math.pow(zr, 1.0 / 3.0) : (kK * zr + 16.0) / 116.0;\n  return [116.0 * fy - 16.0, 500.0 * (fx - fy), 200.0 * (fy - fz)];\n}\nfunction gammaAdjustSRGB(companded) {\n  const sign = Math.sign(companded);\n  companded = Math.abs(companded);\n  const linear = companded <= 0.04045 ? companded / 12.92 : Math.pow((companded + 0.055) / 1.055, 2.4);\n  return linear * sign;\n}\nconst rgb2xyz = (r, g, b) => {\n  // normalize and gamma adjust\n  r = gammaAdjustSRGB(r / 255);\n  g = gammaAdjustSRGB(g / 255);\n  b = gammaAdjustSRGB(b / 255);\n  const {\n    MtxRGB2XYZ,\n    MtxAdaptMa,\n    MtxAdaptMaI,\n    Xn,\n    Yn,\n    Zn,\n    As,\n    Bs,\n    Cs\n  } = LAB_CONSTANTS;\n  let x = r * MtxRGB2XYZ.m00 + g * MtxRGB2XYZ.m10 + b * MtxRGB2XYZ.m20;\n  let y = r * MtxRGB2XYZ.m01 + g * MtxRGB2XYZ.m11 + b * MtxRGB2XYZ.m21;\n  let z = r * MtxRGB2XYZ.m02 + g * MtxRGB2XYZ.m12 + b * MtxRGB2XYZ.m22;\n  const Ad = Xn * MtxAdaptMa.m00 + Yn * MtxAdaptMa.m10 + Zn * MtxAdaptMa.m20;\n  const Bd = Xn * MtxAdaptMa.m01 + Yn * MtxAdaptMa.m11 + Zn * MtxAdaptMa.m21;\n  const Cd = Xn * MtxAdaptMa.m02 + Yn * MtxAdaptMa.m12 + Zn * MtxAdaptMa.m22;\n  let X = x * MtxAdaptMa.m00 + y * MtxAdaptMa.m10 + z * MtxAdaptMa.m20;\n  let Y = x * MtxAdaptMa.m01 + y * MtxAdaptMa.m11 + z * MtxAdaptMa.m21;\n  let Z = x * MtxAdaptMa.m02 + y * MtxAdaptMa.m12 + z * MtxAdaptMa.m22;\n  X *= Ad / As;\n  Y *= Bd / Bs;\n  Z *= Cd / Cs;\n  x = X * MtxAdaptMaI.m00 + Y * MtxAdaptMaI.m10 + Z * MtxAdaptMaI.m20;\n  y = X * MtxAdaptMaI.m01 + Y * MtxAdaptMaI.m11 + Z * MtxAdaptMaI.m21;\n  z = X * MtxAdaptMaI.m02 + Y * MtxAdaptMaI.m12 + Z * MtxAdaptMaI.m22;\n  return [x, y, z];\n};\nexport default rgb2lab;\nexport { rgb2xyz };","map":{"version":3,"names":["LAB_CONSTANTS","unpack","rgb2lab","args","r","g","b","rest","x","y","z","rgb2xyz","L","a","b_","xyz2lab","length","Xn","Yn","Zn","kE","kK","xr","yr","zr","fx","Math","pow","fy","fz","gammaAdjustSRGB","companded","sign","abs","linear","MtxRGB2XYZ","MtxAdaptMa","MtxAdaptMaI","As","Bs","Cs","m00","m10","m20","m01","m11","m21","m02","m12","m22","Ad","Bd","Cd","X","Y","Z"],"sources":["/Users/alyssayee/Library/Mobile Documents/com~apple~CloudDocs/School/College/UCD/Classes/ECS 273/github/FitBot/fitbot/node_modules/chroma-js/src/io/lab/rgb2lab.js"],"sourcesContent":["import LAB_CONSTANTS from './lab-constants.js';\nimport { unpack } from '../../utils/index.js';\n\nconst rgb2lab = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [x, y, z] = rgb2xyz(r, g, b);\n    const [L, a, b_] = xyz2lab(x, y, z);\n    return [L, a, b_, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nfunction xyz2lab(x, y, z) {\n    const { Xn, Yn, Zn, kE, kK } = LAB_CONSTANTS;\n    const xr = x / Xn;\n    const yr = y / Yn;\n    const zr = z / Zn;\n\n    const fx = xr > kE ? Math.pow(xr, 1.0 / 3.0) : (kK * xr + 16.0) / 116.0;\n    const fy = yr > kE ? Math.pow(yr, 1.0 / 3.0) : (kK * yr + 16.0) / 116.0;\n    const fz = zr > kE ? Math.pow(zr, 1.0 / 3.0) : (kK * zr + 16.0) / 116.0;\n\n    return [116.0 * fy - 16.0, 500.0 * (fx - fy), 200.0 * (fy - fz)];\n}\n\nfunction gammaAdjustSRGB(companded) {\n    const sign = Math.sign(companded);\n    companded = Math.abs(companded);\n    const linear =\n        companded <= 0.04045\n            ? companded / 12.92\n            : Math.pow((companded + 0.055) / 1.055, 2.4);\n    return linear * sign;\n}\n\nconst rgb2xyz = (r, g, b) => {\n    // normalize and gamma adjust\n    r = gammaAdjustSRGB(r / 255);\n    g = gammaAdjustSRGB(g / 255);\n    b = gammaAdjustSRGB(b / 255);\n\n    const { MtxRGB2XYZ, MtxAdaptMa, MtxAdaptMaI, Xn, Yn, Zn, As, Bs, Cs } =\n        LAB_CONSTANTS;\n\n    let x = r * MtxRGB2XYZ.m00 + g * MtxRGB2XYZ.m10 + b * MtxRGB2XYZ.m20;\n    let y = r * MtxRGB2XYZ.m01 + g * MtxRGB2XYZ.m11 + b * MtxRGB2XYZ.m21;\n    let z = r * MtxRGB2XYZ.m02 + g * MtxRGB2XYZ.m12 + b * MtxRGB2XYZ.m22;\n\n    const Ad = Xn * MtxAdaptMa.m00 + Yn * MtxAdaptMa.m10 + Zn * MtxAdaptMa.m20;\n    const Bd = Xn * MtxAdaptMa.m01 + Yn * MtxAdaptMa.m11 + Zn * MtxAdaptMa.m21;\n    const Cd = Xn * MtxAdaptMa.m02 + Yn * MtxAdaptMa.m12 + Zn * MtxAdaptMa.m22;\n\n    let X = x * MtxAdaptMa.m00 + y * MtxAdaptMa.m10 + z * MtxAdaptMa.m20;\n    let Y = x * MtxAdaptMa.m01 + y * MtxAdaptMa.m11 + z * MtxAdaptMa.m21;\n    let Z = x * MtxAdaptMa.m02 + y * MtxAdaptMa.m12 + z * MtxAdaptMa.m22;\n\n    X *= Ad / As;\n    Y *= Bd / Bs;\n    Z *= Cd / Cs;\n\n    x = X * MtxAdaptMaI.m00 + Y * MtxAdaptMaI.m10 + Z * MtxAdaptMaI.m20;\n    y = X * MtxAdaptMaI.m01 + Y * MtxAdaptMaI.m11 + Z * MtxAdaptMaI.m21;\n    z = X * MtxAdaptMaI.m02 + Y * MtxAdaptMaI.m12 + Z * MtxAdaptMaI.m22;\n\n    return [x, y, z];\n};\n\nexport default rgb2lab;\nexport { rgb2xyz };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}