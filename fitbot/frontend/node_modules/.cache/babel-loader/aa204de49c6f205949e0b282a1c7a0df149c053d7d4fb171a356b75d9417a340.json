{"ast":null,"code":"var _jsxFileName = \"/Users/alyssayee/Library/Mobile Documents/com~apple~CloudDocs/School/College/UCD/Classes/ECS 273/github/FitBot/fitbot/frontend/src/pages/Signin.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import SoftBox from \"../components/SoftBox\";\n// import SoftTypography from \"../components/SoftTypography\";\n\n// function SignIn() {\n//   return (\n//     <SoftBox p={3}>\n//       <SoftTypography variant=\"h3\" fontWeight=\"bold\">\n//         Sign In Page\n//       </SoftTypography>\n//       <SoftTypography variant=\"body1\">\n//         This is where your sign-in form will go.\n//       </SoftTypography>\n//     </SoftBox>\n//   );\n// }\n\n// export default SignIn;\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { Container, TextField, Button, Box, Typography, Paper } from \"@mui/material\";\n\n// function SignIn() {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     // Here you would handle authentication logic\n//     console.log(\"Username:\", username);\n//     console.log(\"Password:\", password);\n//     // Example: Navigate to dashboard after login\n//     navigate(\"/\");\n//   };\n\n//   return (\n//     <Container maxWidth=\"sm\" sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"100vh\" }}>\n//       <Paper elevation={3} sx={{ padding: 4, width: \"100%\" }}>\n//         <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//           Sign In\n//         </Typography>\n//         <Box component=\"form\" onSubmit={handleSubmit} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n//           <TextField\n//             label=\"Username\"\n//             variant=\"outlined\"\n//             fullWidth\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             required\n//           />\n//           <TextField\n//             label=\"Password\"\n//             type=\"password\"\n//             variant=\"outlined\"\n//             fullWidth\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//           <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n//             Sign In\n//           </Button>\n//         </Box>\n//       </Paper>\n//     </Container>\n//   );\n// }\n\n// export default SignIn;\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { Container, TextField, Button, Box, Typography, Paper } from \"@mui/material\";\n\n// function SignIn() {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     // Check if user already exists (simulating a basic login system)\n//     const storedUser = JSON.parse(localStorage.getItem(username));\n//     if (storedUser && storedUser.password === password) {\n//       localStorage.setItem(\"currentUser\", username); // Save current logged-in user\n//       navigate(\"/settings\");\n//     } else {\n//       alert(\"Invalid username or password!\");\n//     }\n//   };\n\n//   return (\n//     <Container maxWidth=\"sm\" sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"100vh\" }}>\n//       <Paper elevation={3} sx={{ padding: 4, width: \"100%\" }}>\n//         <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//           Sign In\n//         </Typography>\n//         <Box component=\"form\" onSubmit={handleSubmit} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n//           <TextField\n//             label=\"Username\"\n//             variant=\"outlined\"\n//             fullWidth\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             required\n//           />\n//           <TextField\n//             label=\"Password\"\n//             type=\"password\"\n//             variant=\"outlined\"\n//             fullWidth\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//           <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n//             Sign In\n//           </Button>\n//         </Box>\n//       </Paper>\n//     </Container>\n//   );\n// }\n\n// export default SignIn;\n\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Container, TextField, Button, Box, Typography, Paper } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignIn() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Get the stored user data from localStorage\n    const storedUser = JSON.parse(localStorage.getItem(username));\n    if (storedUser && storedUser.password === password) {\n      // Store the logged-in user in localStorage for the session\n      localStorage.setItem(\"currentUser\", username);\n      navigate(\"/settings\");\n    } else {\n      alert(\"Invalid username or password!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        padding: 4,\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        sx: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Username\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          type: \"password\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n_s(SignIn, \"JBV44+s3MGwvm5P+UO1Bab3M9dc=\", false, function () {\n  return [useNavigate];\n});\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","Link","useNavigate","Container","TextField","Button","Box","Typography","Paper","jsxDEV","_jsxDEV","SignIn","_s","username","setUsername","password","setPassword","navigate","handleSubmit","e","preventDefault","storedUser","JSON","parse","localStorage","getItem","setItem","alert","maxWidth","sx","display","justifyContent","alignItems","minHeight","children","elevation","padding","width","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","component","onSubmit","flexDirection","gap","label","fullWidth","value","onChange","target","required","type","color","to","_c","$RefreshReg$"],"sources":["/Users/alyssayee/Library/Mobile Documents/com~apple~CloudDocs/School/College/UCD/Classes/ECS 273/github/FitBot/fitbot/frontend/src/pages/Signin.js"],"sourcesContent":["// import React from \"react\";\n// import SoftBox from \"../components/SoftBox\";\n// import SoftTypography from \"../components/SoftTypography\";\n\n// function SignIn() {\n//   return (\n//     <SoftBox p={3}>\n//       <SoftTypography variant=\"h3\" fontWeight=\"bold\">\n//         Sign In Page\n//       </SoftTypography>\n//       <SoftTypography variant=\"body1\">\n//         This is where your sign-in form will go.\n//       </SoftTypography>\n//     </SoftBox>\n//   );\n// }\n\n// export default SignIn;\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { Container, TextField, Button, Box, Typography, Paper } from \"@mui/material\";\n\n// function SignIn() {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     // Here you would handle authentication logic\n//     console.log(\"Username:\", username);\n//     console.log(\"Password:\", password);\n//     // Example: Navigate to dashboard after login\n//     navigate(\"/\");\n//   };\n\n//   return (\n//     <Container maxWidth=\"sm\" sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"100vh\" }}>\n//       <Paper elevation={3} sx={{ padding: 4, width: \"100%\" }}>\n//         <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//           Sign In\n//         </Typography>\n//         <Box component=\"form\" onSubmit={handleSubmit} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n//           <TextField\n//             label=\"Username\"\n//             variant=\"outlined\"\n//             fullWidth\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             required\n//           />\n//           <TextField\n//             label=\"Password\"\n//             type=\"password\"\n//             variant=\"outlined\"\n//             fullWidth\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//           <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n//             Sign In\n//           </Button>\n//         </Box>\n//       </Paper>\n//     </Container>\n//   );\n// }\n\n// export default SignIn;\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { Container, TextField, Button, Box, Typography, Paper } from \"@mui/material\";\n\n// function SignIn() {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     // Check if user already exists (simulating a basic login system)\n//     const storedUser = JSON.parse(localStorage.getItem(username));\n//     if (storedUser && storedUser.password === password) {\n//       localStorage.setItem(\"currentUser\", username); // Save current logged-in user\n//       navigate(\"/settings\");\n//     } else {\n//       alert(\"Invalid username or password!\");\n//     }\n//   };\n\n//   return (\n//     <Container maxWidth=\"sm\" sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"100vh\" }}>\n//       <Paper elevation={3} sx={{ padding: 4, width: \"100%\" }}>\n//         <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//           Sign In\n//         </Typography>\n//         <Box component=\"form\" onSubmit={handleSubmit} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n//           <TextField\n//             label=\"Username\"\n//             variant=\"outlined\"\n//             fullWidth\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             required\n//           />\n//           <TextField\n//             label=\"Password\"\n//             type=\"password\"\n//             variant=\"outlined\"\n//             fullWidth\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//           <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n//             Sign In\n//           </Button>\n//         </Box>\n//       </Paper>\n//     </Container>\n//   );\n// }\n\n// export default SignIn;\n\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Container, TextField, Button, Box, Typography, Paper } from \"@mui/material\";\n\nfunction SignIn() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Get the stored user data from localStorage\n    const storedUser = JSON.parse(localStorage.getItem(username));\n    if (storedUser && storedUser.password === password) {\n      // Store the logged-in user in localStorage for the session\n      localStorage.setItem(\"currentUser\", username);\n      navigate(\"/settings\");\n    } else {\n      alert(\"Invalid username or password!\");\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\" sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"100vh\" }}>\n      <Paper elevation={3} sx={{ padding: 4, width: \"100%\" }}>\n        <Typography variant=\"h4\" align=\"center\" gutterBottom>\n          Sign In\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n          <TextField\n            label=\"Username\"\n            variant=\"outlined\"\n            fullWidth\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n          <TextField\n            label=\"Password\"\n            type=\"password\"\n            variant=\"outlined\"\n            fullWidth\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n            Sign In\n          </Button>\n          <Link to =\"/sign-up\">\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n            Sign Up\n          </Button>\n          </Link>\n        </Box>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default SignIn;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}