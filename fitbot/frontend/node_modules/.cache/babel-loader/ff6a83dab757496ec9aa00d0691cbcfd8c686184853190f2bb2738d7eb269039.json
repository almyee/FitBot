{"ast":null,"code":"import { last, clip_rgb, type } from './utils/index.js';\nimport _input from './io/input.js';\nclass Color {\n  constructor(...args) {\n    const me = this;\n    if (type(args[0]) === 'object' && args[0].constructor && args[0].constructor === this.constructor) {\n      // the argument is already a Color instance\n      return args[0];\n    }\n    // last argument could be the mode\n    let mode = last(args);\n    let autodetect = false;\n    if (!mode) {\n      autodetect = true;\n      if (!_input.sorted) {\n        _input.autodetect = _input.autodetect.sort((a, b) => b.p - a.p);\n        _input.sorted = true;\n      }\n\n      // auto-detect format\n      for (let chk of _input.autodetect) {\n        mode = chk.test(...args);\n        if (mode) break;\n      }\n    }\n    if (_input.format[mode]) {\n      const rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0, -1));\n      me._rgb = clip_rgb(rgb);\n    } else {\n      throw new Error('unknown format: ' + args);\n    }\n    // add alpha channel\n    if (me._rgb.length === 3) me._rgb.push(1);\n  }\n  toString() {\n    if (type(this.hex) == 'function') return this.hex();\n    return `[${this._rgb.join(',')}]`;\n  }\n}\nexport default Color;","map":{"version":3,"names":["last","clip_rgb","type","_input","Color","constructor","args","me","mode","autodetect","sorted","sort","a","b","p","chk","test","format","rgb","apply","slice","_rgb","Error","length","push","toString","hex","join"],"sources":["/Users/alyssayee/Library/Mobile Documents/com~apple~CloudDocs/School/College/UCD/Classes/ECS 273/github/FitBot/fitbot/node_modules/chroma-js/src/Color.js"],"sourcesContent":["import { last, clip_rgb, type } from './utils/index.js';\nimport _input from './io/input.js';\n\nclass Color {\n    constructor(...args) {\n        const me = this;\n        if (\n            type(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor\n        ) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n        // last argument could be the mode\n        let mode = last(args);\n        let autodetect = false;\n        if (!mode) {\n            autodetect = true;\n\n            if (!_input.sorted) {\n                _input.autodetect = _input.autodetect.sort((a, b) => b.p - a.p);\n                _input.sorted = true;\n            }\n\n            // auto-detect format\n            for (let chk of _input.autodetect) {\n                mode = chk.test(...args);\n                if (mode) break;\n            }\n        }\n        if (_input.format[mode]) {\n            const rgb = _input.format[mode].apply(\n                null,\n                autodetect ? args : args.slice(0, -1)\n            );\n            me._rgb = clip_rgb(rgb);\n        } else {\n            throw new Error('unknown format: ' + args);\n        }\n        // add alpha channel\n        if (me._rgb.length === 3) me._rgb.push(1);\n    }\n    toString() {\n        if (type(this.hex) == 'function') return this.hex();\n        return `[${this._rgb.join(',')}]`;\n    }\n}\nexport default Color;\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,QAAQ,EAAEC,IAAI,QAAQ,kBAAkB;AACvD,OAAOC,MAAM,MAAM,eAAe;AAElC,MAAMC,KAAK,CAAC;EACRC,WAAWA,CAAC,GAAGC,IAAI,EAAE;IACjB,MAAMC,EAAE,GAAG,IAAI;IACf,IACIL,IAAI,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,IAC1BA,IAAI,CAAC,CAAC,CAAC,CAACD,WAAW,IACnBC,IAAI,CAAC,CAAC,CAAC,CAACD,WAAW,KAAK,IAAI,CAACA,WAAW,EAC1C;MACE;MACA,OAAOC,IAAI,CAAC,CAAC,CAAC;IAClB;IACA;IACA,IAAIE,IAAI,GAAGR,IAAI,CAACM,IAAI,CAAC;IACrB,IAAIG,UAAU,GAAG,KAAK;IACtB,IAAI,CAACD,IAAI,EAAE;MACPC,UAAU,GAAG,IAAI;MAEjB,IAAI,CAACN,MAAM,CAACO,MAAM,EAAE;QAChBP,MAAM,CAACM,UAAU,GAAGN,MAAM,CAACM,UAAU,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,CAAC,GAAGF,CAAC,CAACE,CAAC,CAAC;QAC/DX,MAAM,CAACO,MAAM,GAAG,IAAI;MACxB;;MAEA;MACA,KAAK,IAAIK,GAAG,IAAIZ,MAAM,CAACM,UAAU,EAAE;QAC/BD,IAAI,GAAGO,GAAG,CAACC,IAAI,CAAC,GAAGV,IAAI,CAAC;QACxB,IAAIE,IAAI,EAAE;MACd;IACJ;IACA,IAAIL,MAAM,CAACc,MAAM,CAACT,IAAI,CAAC,EAAE;MACrB,MAAMU,GAAG,GAAGf,MAAM,CAACc,MAAM,CAACT,IAAI,CAAC,CAACW,KAAK,CACjC,IAAI,EACJV,UAAU,GAAGH,IAAI,GAAGA,IAAI,CAACc,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CACxC,CAAC;MACDb,EAAE,CAACc,IAAI,GAAGpB,QAAQ,CAACiB,GAAG,CAAC;IAC3B,CAAC,MAAM;MACH,MAAM,IAAII,KAAK,CAAC,kBAAkB,GAAGhB,IAAI,CAAC;IAC9C;IACA;IACA,IAAIC,EAAE,CAACc,IAAI,CAACE,MAAM,KAAK,CAAC,EAAEhB,EAAE,CAACc,IAAI,CAACG,IAAI,CAAC,CAAC,CAAC;EAC7C;EACAC,QAAQA,CAAA,EAAG;IACP,IAAIvB,IAAI,CAAC,IAAI,CAACwB,GAAG,CAAC,IAAI,UAAU,EAAE,OAAO,IAAI,CAACA,GAAG,CAAC,CAAC;IACnD,OAAO,IAAI,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAG,CAAC,GAAG;EACrC;AACJ;AACA,eAAevB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}